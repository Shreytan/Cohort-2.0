import { useState } from "react";
import reactLogo from "./assets/react.svg";
import viteLogo from "/vite.svg";
import "./App.css";
import Maths from "./Maths";

function App() {
  // const [count, setCount] = useState(0);

  // return (
  //   <>
  //     <div>
  //       <button onClick={() => setCount((count) => count + 1)}>
  //         count is {count}
  //       </button>
  //     </div>
  //     <div>
  //       <Header title="hello world"></Header>
  //       <Header title="Shreyansh"></Header>
  //       <Maths></Maths>
  //     </div>
  //   </>
  // );

  // function Header(props) {
  //   return <div>{props.title}</div>;
  // }
  // this was done but evrytime button is clicked the whole componrnt re renders , In react we have to minimise the amount of re rendering and hence we are modifying the approach by creating components that explicitly keep track of the state variables , hence sparing the whole component to not render evrytime the button is clicked 

  //Go to inspect and hover over to the components tab
  //clicl the button and see the whole app is re rendering whereas when u do it with the code below , only targeted header gets rendered again

  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  // function App() {
  return(
    <>
      <HeaderWithButton />
      <Header title="Shreyansh is not a good boy" />
      <Maths />
    </>
  )
}

function HeaderWithButton() {
  const [title, setTitle] = useState("Shreyansh Shukla");

  const handleTitleChange = () => {
    setTitle(`Rule no ${Math.random().toFixed(1) * 10} Shreyansh Shukla is a good boy`);
  }

  return (
    <>
      <button onClick={handleTitleChange}>Click here to change the name</button>
      <Header title={title} />
    </>
  )
}

function Header({ title }) {
  return <div>{title}</div>
// }-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  return(
    <>
    <Headerwithbutton></Headerwithbutton>
    <Header title = "Shreyansh is not a good boy"></Header>
    </>
  )
  function Headerwithbutton(){
    const [title  , setTitle] = useState("Shreyansh Shukla");
    function ontitle(){
      setTitle(` Rule no ${Math.random().toFixed(1)*10} Shreyansh Shukla is a good boy`);
    } 
    return(
      <>
       <button onClick={ontitle}>Click here to change the name</button>
        <Header title = {title}></Header>
      </>
    )
  }
  function Header(props){
    return <div>{props.title}</div>
  }

}

export default App;
